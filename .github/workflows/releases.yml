name: Releases

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PACKAGE_NAME: emma-common
  PACKAGE_LINK: https://github.com/emma-simbot/common
  PYTHON_VERSION: 3.9

jobs:
  labeler:
    name: Update labels
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Run Labeler
        uses: crazy-max/ghaction-github-labeler@v4.1.0

  continuous-integration:
    name: Continuous Integration
    uses: "./.github/workflows/continuous_integration.yml"
    secrets: inherit

  tests:
    name: Tests
    uses: "./.github/workflows/tests.yml"
    secrets: inherit

  release:
    name: Release
    runs-on: self-hosted
    needs: [continuous-integration, tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Setup Git
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git config user.name "emma-simbot-bot"
          git config user.email "gdgp7yme8hn6zghsuoms@feedly.email"
          git config --global url."https://${PAT}@github.com/".insteadOf "https://github.com/"

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Load npm cache
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          npm install --no-save @bjoluc/semantic-release-config-poetry
          npx semantic-release

  dispatch:
    name: Dispatch to EMMA PyPi
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Create workflow inputs
        id: project
        run: |
          PROJECT_VERSION=$(poetry version | cut -d' ' -f2)
          WORKFLOW_INPUTS="{'package_name': '${{ env.PACKAGE_NAME }}', 'version':'$PROJECT_VERSION', 'link':'git+${{ env.PACKAGE_LINK }}@v$PROJECT_VERSION'}"
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_OUTPUT
          echo "WORKFLOW_INPUTS=${WORKFLOW_INPUTS//\'/\"}" >> $GITHUB_OUTPUT

      - name: Dispatch
        uses: pauldraper/workflow-dispatch@v1.6
        with:
          repo: emma-simbot/pypi
          token: ${{ secrets.PAT }}
          workflow: update.yml
          inputs: ${{ steps.project.outputs.WORKFLOW_INPUTS }}
