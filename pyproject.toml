[tool.poetry]
name = "emma-common"
version = "1.13.2"
description = "Common modules which are used a lot throughout EMMA repositories"
authors = ["Amit Parekh <7276308+amitkparekh@users.noreply.github.com>"]

packages = [{ include = "emma_common", from = "src" }]

[tool.poe]
envfile = ".env"

[tool.poe.tasks]

[tool.poe.tasks.format]
help = "Format using the pre-commit hooks"
cmd = "pre-commit run --all-files"

[tool.poe.tasks.typecheck]
help = "Check types with mypy"
cmd = "mypy ."

[tool.poe.tasks.lint]
help = "Lint with flake8"
cmd = "flake8 ."

[tool.poe.tasks.test]
help = "Run the fast Python tests"
cmd = "pytest --cov=src -m 'not slow'"

[tool.poe.tasks.test-everything]
help = "Run all the tests and get the coverage"
cmd = "pytest -v --durations=40 --color=yes --junitxml=pytest.xml --cov=src -m 'not slow' -n 2"


[tool.poetry.dependencies]
python = "^3.9"
pydantic = { extras = ["dotenv"], version = "^1.10.2" }
rich = "^12.6.0"
loguru = "^0.6.0"
torch = "^1.10,!=1.13.0"
orjson = "^3.8.3"
gunicorn = "^20.1.0"
fastapi = { extras = ["all"], version = "^0.88.0" }
opentelemetry-exporter-otlp-proto-grpc = "^1.14.0,!=1.15.0"
watchtower = "^3.0.0"
opensearch-logger = "^1.2.2"
httpx = "^0.23.1"
opentelemetry-distro = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-fastapi = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-logging = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-httpx = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-urllib3 = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-system-metrics = "^0.35b0,!=0.36b0"
opentelemetry-instrumentation-botocore = "^0.35b0,!=0.36b0"

[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
wemake-python-styleguide = "^0.17.0"
flake8 = "^4.0.1"
mypy = "^0.981"
pytest = "^7.1.2"
pre-commit = "^2.19.0"
poethepoet = "^0.16.2"
isort = "^5.10.1"
pytest-cases = "^3.6.13"
pytest-xdist = "^2.5.0"
pytest-cov = "^3.0.0"
boto3-stubs = { extras = ["essential", "secretsmanager"], version = "^1.26.27" }

[tool.black]
line-length = 99

[tool.isort]
profile = "black"
combine_as_imports = true
lines_after_imports = 2
line_length = 99
known_first_party = ["emma_*"]

[tool.coverage.run]
omit = ["src/emma_common/logging.py"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
